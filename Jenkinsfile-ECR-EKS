pipeline
{
agent any
stages 

{ stage ('scm_checkout')
  { steps { git branch: 'master', url: 'https://github.com/prakashk0301/-project.git' } }


  stage ('execute unit test')
  {steps { with(globalSettingsConfig: '15a8520f-ebc1-4c5f-95a7-1c052ffb1c6c', jdk: 'LocalJDK', : 'LocalMVN', SettingsConfig: '7c4be8a0-0f31-4062-8458-e3dac7ad9341', traceability: true) 
{ sh 'mvn test' } 
 }}


stage ('build the code')
{ steps { with(globalSettingsConfig: '15a8520f-ebc1-4c5f-95a7-1c052ffb1c6c', jdk: 'LocalJDK', : 'LocalMVN', SettingsConfig: '7c4be8a0-0f31-4062-8458-e3dac7ad9341', traceability: true) 
 {  sh 'mvn package' } 
} } 

stage ('docker build and push')
{ steps { // This step should not normally be used in your script. Consult the inline help for details.
withDockerRegistry(credentialsId: 'ecr:eu-central-1:awsaccount', url: 'https://040872219986.dkr.ecr.eu-central-1.amazonaws.com/myregistry') 
{ sh 'docker build -t 040872219986.dkr.ecr.eu-central-1.amazonaws.com/myregistry:latest .'
  sh ' docker push 040872219986.dkr.ecr.eu-central-1.amazonaws.com/myregistry:latest'} 
} }


stage ('eks deployment')
{ steps { withAWS(credentials: 'awsaccount', endpointUrl: '172.31.29.30:443', region: 'eu-central-1')
{ sh 'aws sts get-caller-identity'
  sh 'aws eks --region eu-central-1 update-kubeconfig --name k8s-eks'
  sh 'kubectl apply -f eks-manifest.yaml'}
} }


}
}
